========== Сборка мусора ==========

Достижимые значения — это значения, к которым мы можем иметь доступ.
    Например: 
        выполняемая в данный момент функция, её локальные переменные и параметры
        функции, которые работают
        глобальные переменные
        Эти значения — корни
    Также, значения которые считаются достижимыми это те значения к которым 
        мы можем получить доступ по ссылке из корня

В JavaScript есть фоновый процесс — сборщик мусора. 
    Он отслеживает всё и удаляет недостежимые свойства


Основной алгоритм сборки мусора называется «алгоритм пометок» (от англ. «mark-and-sweep»).

Согласно этому алгоритму, сборщик мусора регулярно выполняет следующие шаги:

1. Сборщик мусора «помечает» (запоминает) все корневые объекты.
2. Затем он идёт по ним и «помечает» все ссылки из них.
3. Затем он идёт по отмеченным объектам и отмечает их ссылки. Все посещённые объекты запоминаются, чтобы в будущем не посещать один и тот же объект дважды.
4. …И так далее, пока не будут посещены все достижимые (из корней) ссылки.
5. Все непомеченные объекты удаляются.


Главное, что нужно знать:

Сборка мусора выполняется автоматически. Мы не можем ускорить или предотвратить её.
Объекты сохраняются в памяти, пока они достижимы.
Если на объект есть ссылка – вовсе не факт, что он является достижимым (из корня): 
    набор взаимосвязанных объектов может стать недоступен в целом, как мы видели в примере выше.