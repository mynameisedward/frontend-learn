Формы нужны для отправки данных на сервер.

Очень важно, чтобы поля в формах не были пустыми и были написаны в правильном формате
Это называется валидация на стороне клиента
По мере ввода текста в поле, браузер и/или сервер проверяет, правильно ли написано
    и если не правильно — показывает ошибку

Валидация, выполняемая на стороне браузера называется валидация на стороне клиента

Типы валидации на стороне клиента:
• Встроенная валидация. Использует функционал HTML-5
    Очень производительна, не требует много JavaScript-кода,
    но не на столько настраиваема как JavaScript валидация
• JavaScript валидация. Пишется с помощью JavaScript
    Полностью настраиваемая, но требует настройки с нуля

===== Встроенная валидация =====
Можно валидировать бОльшую часть пользовательских данных, 
    Делается это с помощью параметров элементов формы
    Например: 
        • required. Определяет, что для отправки формы, данное поле необходимо заполнить
        • minLength и maxLength. Определяет минимум и максимум символов, вводимых в поле
        • min и max. Миним и максимум. только по числовому типу данных
        • type. Определяет тип данных, на который рассчитано поле. text, email и т.данное
        • pattern. С помощью регулярного выражения, определяет шаблон, которому должны соответствовать вводимые данные.
    Если все эти правила соблюдены, то данные валидны, если нет — нет.

    Если элемент валиден:
        • У элемента появляется псевдокласс :valid, который позволяет стилизовать только валидные элементы
        • Если пользователь пытается отправить данные, браузер отправит форму при условии, 
            что ничто другое (например, JavaScript) не помешает ему это сделать

    Если элемент не валиден:
        • Элемент имеет псевдокласс :invalid
        • Если пользователь попытается отправить данные, у него не получится это сделать
            Браузер заблокирует форму и выведет сообщение об ошибке
    